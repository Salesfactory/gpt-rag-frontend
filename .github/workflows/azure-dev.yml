# .github/workflows/deploy.yml
name: Build and Deploy to Azure

on:
  push:
    branches:
      - develop

jobs:
  perf-locust:
    name: Performance - Locust
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Locust
        run: pip install locust

      - name: Run Locust (headless with thresholds)
        env:
          LOCUST_HOST: ${{ secrets.PERF_TARGET_HOST }}
          USERS: ${{ vars.PERF_USERS || 100 }}
          SPAWN_RATE: ${{ vars.PERF_SPAWN_RATE || 20 }}
          RUN_TIME: ${{ vars.PERF_RUN_TIME || '5m' }}
        run: |
          test -n "$LOCUST_HOST"
          mkdir -p perf_reports
          locust \
            --headless \
            --locustfile backend/tests/perf/locustfile.py \
            --users ${USERS} \
            --spawn-rate ${SPAWN_RATE} \
            --run-time ${RUN_TIME} \
            --host "$LOCUST_HOST" \
            --stop-timeout 30 \
            --html perf_reports/report.html \
            --csv  perf_reports/results

      - name: Upload Locust reports
        uses: actions/upload-artifact@v4
        with:
          name: locust-reports
          path: perf_reports/

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: perf-locust
    steps:
      # 1. Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Install System Dependencies
      - name: Install System Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
          zip \
          libpango-1.0-0 \
          libharfbuzz0b \
          libpangoft2-1.0-0 \
          libharfbuzz-subset0 \
          libffi-dev \
          libjpeg-dev \
          libopenjp2-7-dev \
          libglib2.0-0 \
          libglib2.0-dev \
          libcairo2 \
          libcairo2-dev \
          libpangocairo-1.0-0 \
          pkg-config \
          python3-dev \
          python3-cffi \
          libgobject-2.0-0

      # 3. Azure Login
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 4. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # 5. Build Frontend
      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      # 6. Package Backend
      - name: Package Backend
        working-directory: backend
        run: |
          rm -rf backend_env
          zip -r ../deploy.zip *

      # 7. Deploy to Azure
      - name: Deploy to Azure
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            set -e
            if [ ! -f deploy.zip ]; then
              echo "deploy.zip not found"
              exit 1
            fi
            az webapp deploy \
              --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --name ${{ secrets.AZURE_WEBAPP_NAME }} \
              --src-path deploy.zip \
              --type zip \
              --async true
